#! /usr/bin/ruby
#

fn = ARGV.shift

class XDate
  def initialize s
    @now = Time.now
    (d,m,y) = s.split(/\//)
    y = @now.year if y==nil
    @t = Time.local(y,m.to_i,d.to_i)
  end

  def day
    form(@t)
  end

  def days_before num
    form(@t-num*24*3600)
  end

  def day_before
    days_before(1)
  end

  def waterbed_before
    if winter?
      days_before(2)
    else
      days_before(1)
    end
  end

  def day_later
    form(@t+24*3600)
  end

  def form t
    t.month.to_s.rjust(2,'0')+'/'+t.day.to_s.rjust(2,'0')
  end

protected

  def winter?
    @t.month <= 3 or @t.month >= 11
  end
end

header = <<HEADER
# GENERATED by heyu.rb

macro bed_on  0 on waterbed
macro bed_off 0 off waterbed
macro cv_on  0 on cv
macro cv_off 0 off cv
macro internet_on 0 on internet
macro internet_off 0 off internet
macro stereo_off 0 off stereo

timer .mtwtf. 01/01-12/31  03:10  03:10  internet_off  null
timer .mtwtf. 01/01-12/31  03:11  03:11  internet_on  null

# Year round heating regulation (may-october less often)
# Basically this is the fallback for when the laptop
# fails (the laptop regulates 8 degrees, the thermostat 
# will be at 15 degrees)
# timer smtwtfs 01/01-12/31  02:59  02:59  cv_on  null
# timer smtwtfs 01/01-12/31  06:59  06:59  cv_on  null
# timer smtwtfs 01/01-12/31  22:59  22:59  cv_on  null

# timer smtwtfs 01/01-12/31  03:00  03:00  cv_off  null
# timer ..t..f. 05/02-10/01   6:30   6:30  cv_on  null

# ---- Switch on the CV to prevent dampness
# Autumn/Winter
timer smtwtfs 10/02-12/31   6:30   6:30  cv_on  null
# Winter/Spring
timer smtwtfs 01/01-05/01   6:30   6:30  cv_on  null
# All year
timer smtwtfs 01/01-12/31   7:30   7:30  cv_off null

# During cold spells uncomment these:
# timer smtwtfs 01/01-12/31  22:30  22:30  cv_on  null
# timer smtwtfs 01/01-12/31  02:30  02:30  cv_on  null
# timer smtwtfs 01/01-12/31  03:00  03:00  cv_off  null

# ---- Always switch off:
timer smtwtfs 01/01-12/31  23:00  23:00  cv_off null
# Year round tv and stereo
timer smtwtfs 01/01-12/31  02:01  02:01  stereo_off null

HEADER

print header

File.new(fn).each_line do | line |
  next if line == ''
  (startd, endd) = line.strip.split(/-/)
  next if startd == nil
  s = XDate.new(startd)
  e = XDate.new(endd)
  # timer smtwtfs 01/01-12/31   7:30   7:30  cv_off  null
  print "# ---- Period ",s.day,"-",e.day,"\n"

  print "# Switch waterbed on:\n"
  print "timer smtwtfs ",s.waterbed_before,'-',s.day," 19:00  19:01  bed_on  null\n"
  print "# Switch waterbed off:\n"
  print "timer smtwtfs ",e.day,'-',e.day_later,"  12:00   12:01  bed_off null\n"
  print "timer smtwtfs ",e.day,'-',e.day_later,"  20:00   20:01  bed_off null\n"
  print "\n"
  print "# Switch heating on:\n"
  print "timer smtwtfs ",s.day,'-',s.day," 18:00  18:01  cv_on  null\n"
  print "timer smtwtfs ",s.day_later,'-',e.day,"  6:40   6:41  cv_on  null\n"
  print "timer smtwtfs ",s.day_later,'-',e.day,"  7:40   7:41  cv_on  null\n"
  print "\n"
end

